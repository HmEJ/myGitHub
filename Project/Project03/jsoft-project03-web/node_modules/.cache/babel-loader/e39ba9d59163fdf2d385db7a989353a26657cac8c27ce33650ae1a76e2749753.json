{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      isShow: false,\n      formArgs: \"\",\n      tbId: null,\n      userId: null,\n      userName: null,\n      email: null,\n      phone: null,\n      password: \"\"\n    };\n  },\n  methods: {\n    check: function check() {\n      this.isShow = !this.isShow;\n    },\n    register: function register() {\n      if (this.formArgs == \"\" || this.password == \"\") {\n        alert(\"请填写完整信息\");\n      } else {\n        // 简单的手机号正则，匹配11位数字\n        var phoneRegex = /^[1-9]\\d{10}$/;\n        // 简单的邮箱正则，匹配常见的邮箱格式\n        var emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n        var psswordRegex = /^[a-zA-Z0-9]{6,20}$/;\n        if (phoneRegex.test(this.formArgs)) {\n          this.phone = this.formArgs;\n        } else if (emailRegex.test(this.formArgs)) {\n          this.email = this.formArgs;\n        } else {\n          alert(\"请输入正确的手机号或邮箱\");\n          return;\n        }\n        if (psswordRegex.test(this.password)) {}\n        if (!this.isShow) {\n          alert(\"请阅读并接受协议后再注册用户！\");\n        } else {\n          var that = this;\n          axios({\n            method: 'post',\n            url: '/api/user-info/register',\n            async: true,\n            data: {\n              tbId: that.tbId,\n              userId: that.userId,\n              userName: that.userName,\n              email: that.email,\n              phone: that.phone,\n              password: that.password\n            }\n          }).then(function (result) {\n            console.log(result);\n            if (result.data.code == 100001) {\n              alert(\"注册成功！\");\n            } else {\n              alert(\"注册失败！\");\n            }\n            that.$router.push({\n              path: '/login'\n            });\n          });\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","isShow","formArgs","tbId","userId","userName","email","phone","password","methods","check","register","alert","phoneRegex","emailRegex","psswordRegex","test","that","method","url","async","then","result","console","log","code","$router","push","path"],"sources":["src/pages/page-login/components/Register.vue"],"sourcesContent":["<template>\n    <div>\n        <div class=\"header\">\n            <div class=\"mainwarp\">\n                <div class=\"logo\"><a href=\"/index\"><img src=\"/static/images/log.png\" /></a></div>\n                <div class=\"welcome\">欢迎注册</div>\n                <div class=\"headerright\">\n                    <a href=\"/login\">个人登录</a>\n                    <span>|</span>\n                    <a href=\"/index\">返回首页</a>\n                </div>\n            </div>\n        </div>\n        <div class=\"zhuceBox\">\n            <div class=\"zcLeft\">\n                <ul id=\"tabzc\">\n                    <li>邮箱/手机号注册</li>\n                    <li></li>\n                    <div class=\"clear\"></div>\n                </ul>\n                <div class=\"clear\"></div>\n                <div id=\"contentzc\">\n                    <ul style=\"display:block;\">\n                        <div class=\"zcpart0\">\n                            <div class=\"zcpart5\">\n                                <span></span>\n                                <input name=\"\" v-model=\"formArgs\" type=\"text\" placeholder=\"手机号或邮箱\" />\n                            </div>\n                            <div class=\"zcpart6\">手机号/邮箱用于登录和找回密码</div>\n                            <div class=\"zcpart7\">\n                                <span></span>\n                                <input name=\"\" v-model=\"password\" type=\"text\" placeholder=\"设置密码\" />\n                            </div>\n                            <div class=\"zcpart6\">请输入6-20个字符</div>\n                            <div class=\"zcpart2_c\">\n                                <span class=\"CheckBox\" :class=\"{Yes: isShow}\" @click=\"check()\"></span>\n                                <span style=\"float:left\">我已阅读并接受<a href=\"/login/user_agree\">用户协议</a></span>\n                            </div>\n                            <div class=\"clear\"></div>\n                            <div class=\"zcpart8\">\n                                <a href=\"#\" @click=\"register()\" >注 册</a>\n                            </div>\n      \n                        </div>\n                    </ul>\n                </div>\n            </div>\n            <div class=\"zcRight\">\n                <div class=\"topdiv\">\n                    <span class=\"noPa\">已有账号了？</span><br />\n                    <a href=\"/login\">立即登录</a>\n                </div>\n            </div>\n        </div>\n        <div class=\"clear\"></div>\n    </div>\n</template>\n<script>\nimport axios from 'axios'\nexport default {\n    data() {\n        return {\n            isShow: false,\n\n            formArgs:\"\",\n\n            tbId:null,\n            userId:null,\n            userName:null,\n            email:null,\n            phone:null,\n            password:\"\"\n\n\n        }\n    },\n    methods: {\n        check() {\n            this.isShow = !this.isShow\n        },\n        register(){\n            if((this.formArgs == \"\") || (this.password == \"\")){\n                alert(\"请填写完整信息\");\n            }else{\n                // 简单的手机号正则，匹配11位数字\n                const phoneRegex = /^[1-9]\\d{10}$/;\n                // 简单的邮箱正则，匹配常见的邮箱格式\n                const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n                const psswordRegex = /^[a-zA-Z0-9]{6,20}$/;\n\n                if(phoneRegex.test(this.formArgs)){\n                    this.phone = this.formArgs;\n                }else if(emailRegex.test(this.formArgs)){\n                    this.email = this.formArgs;\n                }else{\n                    alert(\"请输入正确的手机号或邮箱\");\n                    return;\n                }\n\n                if(psswordRegex.test(this.password)){\n                    \n                }\n                \n                \n\n                if(!this.isShow){\n                    alert(\"请阅读并接受协议后再注册用户！\")\n                }else{\n                    let that = this;\n                    axios({\n                        method:'post',\n                        url:'/api/user-info/register',\n                        async:true,\n                        data:{\n                            tbId:that.tbId,\n                            userId:that.userId,\n                            userName:that.userName,\n                            email:that.email,\n                            phone:that.phone,\n                            password:that.password\n                        }\n                    })\n                    .then(function (result){\n                        console.log(result)\n                        if(result.data.code == 100001){\n                            alert(\"注册成功！\");\n                        }else{\n                            alert(\"注册失败！\");\n                        }\n                        that.$router.push({path:'/login'})\n                    })\n                }\n            }\n        }\n    }\n}\n</script>"],"mappings":";;;AA0DA,OAAAA,KAAA;AACA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,MAAA;MAEAC,QAAA;MAEAC,IAAA;MACAC,MAAA;MACAC,QAAA;MACAC,KAAA;MACAC,KAAA;MACAC,QAAA;IAGA;EACA;EACAC,OAAA;IACAC,KAAA,WAAAA,MAAA;MACA,KAAAT,MAAA,SAAAA,MAAA;IACA;IACAU,QAAA,WAAAA,SAAA;MACA,SAAAT,QAAA,eAAAM,QAAA;QACAI,KAAA;MACA;QACA;QACA,IAAAC,UAAA;QACA;QACA,IAAAC,UAAA;QACA,IAAAC,YAAA;QAEA,IAAAF,UAAA,CAAAG,IAAA,MAAAd,QAAA;UACA,KAAAK,KAAA,QAAAL,QAAA;QACA,WAAAY,UAAA,CAAAE,IAAA,MAAAd,QAAA;UACA,KAAAI,KAAA,QAAAJ,QAAA;QACA;UACAU,KAAA;UACA;QACA;QAEA,IAAAG,YAAA,CAAAC,IAAA,MAAAR,QAAA,IAEA;QAIA,UAAAP,MAAA;UACAW,KAAA;QACA;UACA,IAAAK,IAAA;UACAlB,KAAA;YACAmB,MAAA;YACAC,GAAA;YACAC,KAAA;YACApB,IAAA;cACAG,IAAA,EAAAc,IAAA,CAAAd,IAAA;cACAC,MAAA,EAAAa,IAAA,CAAAb,MAAA;cACAC,QAAA,EAAAY,IAAA,CAAAZ,QAAA;cACAC,KAAA,EAAAW,IAAA,CAAAX,KAAA;cACAC,KAAA,EAAAU,IAAA,CAAAV,KAAA;cACAC,QAAA,EAAAS,IAAA,CAAAT;YACA;UACA,GACAa,IAAA,WAAAC,MAAA;YACAC,OAAA,CAAAC,GAAA,CAAAF,MAAA;YACA,IAAAA,MAAA,CAAAtB,IAAA,CAAAyB,IAAA;cACAb,KAAA;YACA;cACAA,KAAA;YACA;YACAK,IAAA,CAAAS,OAAA,CAAAC,IAAA;cAAAC,IAAA;YAAA;UACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}