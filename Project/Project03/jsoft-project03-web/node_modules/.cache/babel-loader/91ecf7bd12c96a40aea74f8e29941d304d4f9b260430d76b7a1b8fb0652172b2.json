{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      isActive: false,\n      loginArgs: \"\",\n      phone: null,\n      userEmail: null,\n      password: null,\n      userName: null,\n      code: null,\n      userId: null\n    };\n  },\n  methods: {\n    check: function check() {\n      this.isActive = !this.isActive;\n    },\n    getUserInfo: function getUserInfo() {\n      //获取用户详细信息\n      var that = this;\n      axios({\n        method: 'post',\n        url: '/api/user-info/getUserInfo',\n        data: {\n          userId: that.userId,\n          phone: that.phone,\n          userEmail: that.userEmail,\n          userName: that.userName,\n          password: that.password,\n          code: that.code\n        }\n      }).then(function (result) {\n        console.log(result);\n        // console.log(result.data.object.phone)\n        that.phone = result.data.object.phone;\n        console.log(result.data.object.userName);\n        that.userName = result.data.object.userName;\n        that.userEmail = result.data.object.userEmail;\n      });\n    },\n    submitFormDTO: function submitFormDTO() {\n      // 简单的手机号正则，匹配11位数字\n      var phoneRegex = /^[1-9]\\d{10}$/;\n      // 简单的邮箱正则，匹配常见的邮箱格式\n      var emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n      // 简单的用户名正则，匹配以\"user_\"开头，后面跟着数字的格式\n      var usernameRegex = /^user_\\d+$/;\n      if (phoneRegex.test(this.loginArgs)) {\n        this.phone = this.loginArgs;\n      }\n      if (emailRegex.test(this.loginArgs)) {\n        this.userEmail = this.loginArgs;\n      }\n      if (usernameRegex.test(this.loginArgs)) {\n        this.userName = this.loginArgs;\n      }\n      if (!this.isActive) {\n        alert(\"请阅读并同意用户协议再登陆！\");\n      } else {\n        var that = this;\n        axios({\n          method: 'post',\n          url: '/api/user-info/login',\n          async: false,\n          data: {\n            phone: that.phone,\n            userEmail: that.userEmail,\n            userName: that.userName,\n            password: that.password,\n            userId: that.userId,\n            code: that.code\n          }\n        }).then(function (result) {\n          console.log(result);\n          var code = result.data.code;\n          if (code == 100000) {\n            alert(\"用户不存在或密码错误\");\n          } else {\n            // that.$router.push('/index')\n            window.location.href = \"/index\";\n          }\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","isActive","loginArgs","phone","userEmail","password","userName","code","userId","methods","check","getUserInfo","that","method","url","then","result","console","log","object","submitFormDTO","phoneRegex","emailRegex","usernameRegex","test","alert","async","window","location","href"],"sources":["src/pages/page-login/components/LoginView.vue"],"sourcesContent":["<template>\n    <div>\n        <div class=\"header\">\n            <div class=\"mainwarp\">\n                <div class=\"logo\"><a href=\"/index\"><img src=\"/static/images/log.png\" /></a></div>\n                <div class=\"welcome\">欢迎登录</div>\n                <div class=\"headerright\">\n                    <a href=\"/index\">返回首页</a>\n                </div>\n            </div>\n        </div>\n        <div class=\"content\">\n            <div class=\"logtype\"></div>\n            <div class=\"clear\"></div>\n            <div class=\"logoDiv\">\n                <div class=\"logoLeft\">\n                    <div class=\"leftimg\">\n                        <img src=\"/static/images/log1.gif\" />\n                    </div>\n                    <div class=\"leftcon\">\n                        <a href=\"\" class=\"a1\">手机触屏版</a>\n                        <a href=\"\" class=\"a2\">Android客户端下载</a>\n                        <a href=\"\" class=\"a3\">iPhone客户端下载</a>\n                    </div>\n                </div>\n                <div class=\"logoRight\">\n                    <div class=\"normalLogin\">\n                        <div class=\"username\">\n                            <span></span>\n                            <input name=\"loginArgs\" v-model=\"loginArgs\" type=\"text\" placeholder=\"请输入用户名/邮箱/已验证手机号\" />\n                        </div>\n                        <div class=\"password\">\n                            <span></span>\n                            <input name=\"password\" v-model=\"password\" type=\"text\" placeholder=\"请输入密码\" />\n                        </div>\n                        <div class=\"autoLogo\">\n                            <a href=\"/login/forget\" class=\"pasd\">忘记密码？</a>\n                        </div>\n                        <div class=\"autoLogo\">\n                            <span class=\"CheckBox\" :class=\"{ Yes: isActive }\" @click=\"check()\"></span>\n                            <span>我已阅读并接受<a href=\"/login/user_agree\">用户协议</a></span>\n                        </div>\n                        <div class=\"logobtn\">\n                            <a href=\"#\" @click=\"submitFormDTO()\">登 录</a>\n                        </div>\n                        <div class=\"zcbtn\">\n                            <a href=\"/login/register\">还没有账号？立即注册</a>\n                        </div>\n                    </div>\n                    <div class=\"weixinLogin\">\n                        <div class=\"weixinQr\">\n                            <img src=\"/static/images/showqrcode.jpg\" width=\"150\" class=\"useHelpcon\" />\n                            <p>使用微信扫描上方二维码</p>\n                            <p class=\"useHelp useHelpcon\">使用帮助</p>\n                        </div>\n                        <div class=\"zcbtn\">\n                            <a href=\"/login/register\">还没有账号？立即注册</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"clear\"></div>\n    </div>\n</template>\n<script>\nimport axios from 'axios'\n\nexport default {\n    data() {\n        return {\n            isActive: false,\n            loginArgs: \"\",\n\n            phone: null,\n            userEmail: null,\n            password: null,\n            userName: null,\n            code: null,\n            userId: null\n        }\n    },\n    methods: {\n        check() {\n            this.isActive = !this.isActive\n        },\n        getUserInfo() {  //获取用户详细信息\n            let that = this\n            axios({\n                method: 'post',\n                url: '/api/user-info/getUserInfo',\n                data: {\n                    userId: that.userId,\n                    phone: that.phone,\n                    userEmail: that.userEmail,\n                    userName: that.userName,\n                    password: that.password,\n                    code: that.code\n                }\n            })\n                .then(function (result) {\n                    console.log(result)\n                    // console.log(result.data.object.phone)\n                    that.phone = result.data.object.phone\n                    console.log(result.data.object.userName)\n                    that.userName = result.data.object.userName\n                    that.userEmail = result.data.object.userEmail\n                    \n                })\n        },\n        submitFormDTO() {\n            // 简单的手机号正则，匹配11位数字\n            const phoneRegex = /^[1-9]\\d{10}$/;\n            // 简单的邮箱正则，匹配常见的邮箱格式\n            const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n            // 简单的用户名正则，匹配以\"user_\"开头，后面跟着数字的格式\n            const usernameRegex = /^user_\\d+$/;\n\n            if (phoneRegex.test(this.loginArgs)) {\n                this.phone = this.loginArgs;\n            }\n            if (emailRegex.test(this.loginArgs)) {\n                this.userEmail = this.loginArgs;\n            }\n            if (usernameRegex.test(this.loginArgs)) {\n                this.userName = this.loginArgs;\n            }\n\n            if (!this.isActive) {\n                alert(\"请阅读并同意用户协议再登陆！\")\n            } else {\n                let that = this;\n                axios({\n                    method: 'post',\n                    url: '/api/user-info/login',\n                    async: false,\n                    data: {\n                        phone: that.phone,\n                        userEmail: that.userEmail,\n                        userName: that.userName,\n                        password: that.password,\n                        userId: that.userId,\n                        code: that.code\n                    }\n                })\n                    .then(function (result) {\n                        console.log(result)\n                        let code = result.data.code\n                        if (code == 100000) {\n                            alert(\"用户不存在或密码错误\")\n                        } else {\n                            // that.$router.push('/index')\n                            window.location.href = \"/index\"\n                        }\n                    })\n            }\n        }\n    }\n}\n</script>\n"],"mappings":";;AAmEA,OAAAA,KAAA;AAEA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,QAAA;MACAC,SAAA;MAEAC,KAAA;MACAC,SAAA;MACAC,QAAA;MACAC,QAAA;MACAC,IAAA;MACAC,MAAA;IACA;EACA;EACAC,OAAA;IACAC,KAAA,WAAAA,MAAA;MACA,KAAAT,QAAA,SAAAA,QAAA;IACA;IACAU,WAAA,WAAAA,YAAA;MAAA;MACA,IAAAC,IAAA;MACAb,KAAA;QACAc,MAAA;QACAC,GAAA;QACAd,IAAA;UACAQ,MAAA,EAAAI,IAAA,CAAAJ,MAAA;UACAL,KAAA,EAAAS,IAAA,CAAAT,KAAA;UACAC,SAAA,EAAAQ,IAAA,CAAAR,SAAA;UACAE,QAAA,EAAAM,IAAA,CAAAN,QAAA;UACAD,QAAA,EAAAO,IAAA,CAAAP,QAAA;UACAE,IAAA,EAAAK,IAAA,CAAAL;QACA;MACA,GACAQ,IAAA,WAAAC,MAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,MAAA;QACA;QACAJ,IAAA,CAAAT,KAAA,GAAAa,MAAA,CAAAhB,IAAA,CAAAmB,MAAA,CAAAhB,KAAA;QACAc,OAAA,CAAAC,GAAA,CAAAF,MAAA,CAAAhB,IAAA,CAAAmB,MAAA,CAAAb,QAAA;QACAM,IAAA,CAAAN,QAAA,GAAAU,MAAA,CAAAhB,IAAA,CAAAmB,MAAA,CAAAb,QAAA;QACAM,IAAA,CAAAR,SAAA,GAAAY,MAAA,CAAAhB,IAAA,CAAAmB,MAAA,CAAAf,SAAA;MAEA;IACA;IACAgB,aAAA,WAAAA,cAAA;MACA;MACA,IAAAC,UAAA;MACA;MACA,IAAAC,UAAA;MACA;MACA,IAAAC,aAAA;MAEA,IAAAF,UAAA,CAAAG,IAAA,MAAAtB,SAAA;QACA,KAAAC,KAAA,QAAAD,SAAA;MACA;MACA,IAAAoB,UAAA,CAAAE,IAAA,MAAAtB,SAAA;QACA,KAAAE,SAAA,QAAAF,SAAA;MACA;MACA,IAAAqB,aAAA,CAAAC,IAAA,MAAAtB,SAAA;QACA,KAAAI,QAAA,QAAAJ,SAAA;MACA;MAEA,UAAAD,QAAA;QACAwB,KAAA;MACA;QACA,IAAAb,IAAA;QACAb,KAAA;UACAc,MAAA;UACAC,GAAA;UACAY,KAAA;UACA1B,IAAA;YACAG,KAAA,EAAAS,IAAA,CAAAT,KAAA;YACAC,SAAA,EAAAQ,IAAA,CAAAR,SAAA;YACAE,QAAA,EAAAM,IAAA,CAAAN,QAAA;YACAD,QAAA,EAAAO,IAAA,CAAAP,QAAA;YACAG,MAAA,EAAAI,IAAA,CAAAJ,MAAA;YACAD,IAAA,EAAAK,IAAA,CAAAL;UACA;QACA,GACAQ,IAAA,WAAAC,MAAA;UACAC,OAAA,CAAAC,GAAA,CAAAF,MAAA;UACA,IAAAT,IAAA,GAAAS,MAAA,CAAAhB,IAAA,CAAAO,IAAA;UACA,IAAAA,IAAA;YACAkB,KAAA;UACA;YACA;YACAE,MAAA,CAAAC,QAAA,CAAAC,IAAA;UACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}